// Generated from ../FoxySheep.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 183, 1034,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9, 84, 4, 85, 9, 85, 4, 86,
	9, 86, 4, 87, 9, 87, 4, 88, 9, 88, 4, 89, 9, 89, 4, 90, 9, 90, 4, 91, 9,
	91, 4, 92, 9, 92, 4, 93, 9, 93, 4, 94, 9, 94, 4, 95, 9, 95, 4, 96, 9, 96,
	4, 97, 9, 97, 4, 98, 9, 98, 4, 99, 9, 99, 4, 100, 9, 100, 4, 101, 9, 101,
	4, 102, 9, 102, 4, 103, 9, 103, 4, 104, 9, 104, 4, 105, 9, 105, 4, 106,
	9, 106, 4, 107, 9, 107, 4, 108, 9, 108, 4, 109, 9, 109, 4, 110, 9, 110,
	4, 111, 9, 111, 4, 112, 9, 112, 4, 113, 9, 113, 4, 114, 9, 114, 4, 115,
	9, 115, 4, 116, 9, 116, 4, 117, 9, 117, 4, 118, 9, 118, 4, 119, 9, 119,
	4, 120, 9, 120, 4, 121, 9, 121, 4, 122, 9, 122, 4, 123, 9, 123, 4, 124,
	9, 124, 4, 125, 9, 125, 4, 126, 9, 126, 4, 127, 9, 127, 4, 128, 9, 128,
	4, 129, 9, 129, 4, 130, 9, 130, 4, 131, 9, 131, 4, 132, 9, 132, 4, 133,
	9, 133, 4, 134, 9, 134, 4, 135, 9, 135, 4, 136, 9, 136, 4, 137, 9, 137,
	4, 138, 9, 138, 4, 139, 9, 139, 4, 140, 9, 140, 4, 141, 9, 141, 4, 142,
	9, 142, 4, 143, 9, 143, 4, 144, 9, 144, 4, 145, 9, 145, 4, 146, 9, 146,
	4, 147, 9, 147, 4, 148, 9, 148, 4, 149, 9, 149, 4, 150, 9, 150, 4, 151,
	9, 151, 4, 152, 9, 152, 4, 153, 9, 153, 4, 154, 9, 154, 4, 155, 9, 155,
	4, 156, 9, 156, 4, 157, 9, 157, 4, 158, 9, 158, 4, 159, 9, 159, 4, 160,
	9, 160, 4, 161, 9, 161, 4, 162, 9, 162, 4, 163, 9, 163, 4, 164, 9, 164,
	4, 165, 9, 165, 4, 166, 9, 166, 4, 167, 9, 167, 4, 168, 9, 168, 4, 169,
	9, 169, 4, 170, 9, 170, 4, 171, 9, 171, 4, 172, 9, 172, 4, 173, 9, 173,
	4, 174, 9, 174, 4, 175, 9, 175, 4, 176, 9, 176, 4, 177, 9, 177, 4, 178,
	9, 178, 4, 179, 9, 179, 4, 180, 9, 180, 4, 181, 9, 181, 4, 182, 9, 182,
	4, 183, 9, 183, 4, 184, 9, 184, 4, 185, 9, 185, 4, 186, 9, 186, 4, 187,
	9, 187, 4, 188, 9, 188, 4, 189, 9, 189, 4, 190, 9, 190, 4, 191, 9, 191,
	4, 192, 9, 192, 4, 193, 9, 193, 4, 194, 9, 194, 4, 195, 9, 195, 4, 196,
	9, 196, 4, 197, 9, 197, 4, 198, 9, 198, 4, 199, 9, 199, 4, 200, 9, 200,
	4, 201, 9, 201, 4, 202, 9, 202, 4, 203, 9, 203, 4, 204, 9, 204, 4, 205,
	9, 205, 3, 2, 6, 2, 413, 10, 2, 13, 2, 14, 2, 414, 3, 2, 7, 2, 418, 10,
	2, 12, 2, 14, 2, 421, 11, 2, 3, 3, 3, 3, 5, 3, 425, 10, 3, 3, 4, 3, 4,
	5, 4, 429, 10, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 7, 7, 438,
	10, 7, 12, 7, 14, 7, 441, 11, 7, 3, 7, 7, 7, 444, 10, 7, 12, 7, 14, 7,
	447, 11, 7, 3, 7, 3, 7, 3, 7, 5, 7, 452, 10, 7, 3, 8, 3, 8, 6, 8, 456,
	10, 8, 13, 8, 14, 8, 457, 3, 8, 5, 8, 461, 10, 8, 3, 8, 7, 8, 464, 10,
	8, 12, 8, 14, 8, 467, 11, 8, 3, 8, 7, 8, 470, 10, 8, 12, 8, 14, 8, 473,
	11, 8, 3, 8, 5, 8, 476, 10, 8, 3, 8, 6, 8, 479, 10, 8, 13, 8, 14, 8, 480,
	5, 8, 483, 10, 8, 3, 9, 6, 9, 486, 10, 9, 13, 9, 14, 9, 487, 3, 10, 3,
	10, 3, 11, 3, 11, 5, 11, 494, 10, 11, 3, 12, 3, 12, 5, 12, 498, 10, 12,
	3, 12, 3, 12, 3, 13, 6, 13, 503, 10, 13, 13, 13, 14, 13, 504, 3, 14, 3,
	14, 5, 14, 509, 10, 14, 3, 15, 3, 15, 3, 15, 3, 15, 5, 15, 515, 10, 15,
	3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3,
	18, 7, 18, 528, 10, 18, 12, 18, 14, 18, 531, 11, 18, 3, 18, 3, 18, 3, 18,
	3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3,
	22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25,
	3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 29, 3,
	29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32,
	3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3,
	36, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 40,
	3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3,
	44, 3, 44, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47,
	3, 48, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3,
	50, 3, 51, 3, 51, 5, 51, 633, 10, 51, 3, 52, 3, 52, 3, 53, 3, 53, 3, 53,
	3, 54, 3, 54, 3, 55, 3, 55, 5, 55, 644, 10, 55, 3, 56, 3, 56, 3, 56, 3,
	57, 3, 57, 3, 58, 3, 58, 3, 58, 5, 58, 654, 10, 58, 3, 59, 3, 59, 3, 59,
	3, 60, 3, 60, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 5, 62, 666, 10, 62, 3,
	63, 3, 63, 3, 63, 3, 64, 3, 64, 3, 65, 3, 65, 3, 66, 3, 66, 3, 67, 3, 67,
	3, 68, 3, 68, 3, 69, 3, 69, 3, 70, 3, 70, 3, 71, 3, 71, 3, 72, 3, 72, 3,
	73, 3, 73, 3, 74, 3, 74, 3, 75, 3, 75, 3, 76, 3, 76, 3, 77, 3, 77, 3, 77,
	3, 78, 3, 78, 3, 79, 3, 79, 3, 80, 3, 80, 3, 81, 3, 81, 3, 82, 3, 82, 3,
	83, 3, 83, 3, 84, 3, 84, 3, 85, 3, 85, 3, 86, 3, 86, 3, 87, 3, 87, 3, 88,
	3, 88, 3, 89, 3, 89, 3, 90, 3, 90, 3, 91, 3, 91, 3, 92, 3, 92, 3, 93, 3,
	93, 3, 94, 3, 94, 3, 95, 3, 95, 3, 96, 3, 96, 3, 96, 3, 96, 3, 97, 3, 97,
	3, 97, 3, 98, 3, 98, 3, 99, 3, 99, 3, 99, 3, 99, 3, 100, 3, 100, 3, 100,
	3, 101, 3, 101, 3, 101, 3, 102, 3, 102, 3, 103, 3, 103, 3, 103, 3, 104,
	6, 104, 761, 10, 104, 13, 104, 14, 104, 762, 3, 105, 3, 105, 3, 106, 3,
	106, 3, 106, 3, 107, 3, 107, 3, 108, 3, 108, 3, 108, 3, 109, 3, 109, 3,
	109, 3, 110, 3, 110, 3, 110, 3, 111, 3, 111, 3, 112, 3, 112, 3, 112, 3,
	113, 3, 113, 3, 114, 3, 114, 3, 114, 3, 115, 3, 115, 3, 115, 3, 115, 3,
	116, 3, 116, 3, 116, 3, 117, 3, 117, 3, 117, 3, 118, 3, 118, 3, 118, 3,
	119, 3, 119, 3, 119, 3, 120, 3, 120, 3, 121, 3, 121, 3, 121, 3, 122, 3,
	122, 3, 122, 3, 123, 3, 123, 3, 123, 3, 124, 3, 124, 3, 124, 3, 125, 3,
	125, 3, 126, 3, 126, 3, 126, 3, 126, 3, 127, 3, 127, 3, 127, 3, 128, 3,
	128, 3, 128, 3, 129, 3, 129, 3, 129, 3, 130, 3, 130, 3, 131, 3, 131, 3,
	132, 3, 132, 3, 132, 3, 133, 3, 133, 3, 134, 3, 134, 3, 134, 3, 135, 3,
	135, 3, 135, 3, 136, 3, 136, 3, 136, 3, 137, 3, 137, 3, 137, 3, 137, 3,
	138, 3, 138, 3, 138, 3, 139, 3, 139, 3, 139, 3, 140, 3, 140, 3, 141, 3,
	141, 3, 141, 3, 142, 3, 142, 3, 142, 3, 143, 3, 143, 3, 143, 3, 143, 3,
	144, 3, 144, 3, 144, 3, 145, 3, 145, 3, 146, 3, 146, 3, 146, 3, 147, 3,
	147, 3, 148, 3, 148, 3, 149, 3, 149, 3, 150, 3, 150, 3, 151, 3, 151, 3,
	152, 3, 152, 3, 153, 3, 153, 3, 153, 3, 153, 3, 153, 3, 154, 3, 154, 3,
	155, 3, 155, 3, 156, 3, 156, 3, 157, 3, 157, 3, 158, 3, 158, 3, 159, 3,
	159, 3, 160, 3, 160, 3, 161, 3, 161, 3, 162, 3, 162, 3, 163, 3, 163, 3,
	164, 3, 164, 3, 164, 3, 165, 3, 165, 3, 166, 3, 166, 3, 167, 3, 167, 3,
	168, 3, 168, 3, 169, 3, 169, 3, 170, 3, 170, 3, 171, 3, 171, 3, 172, 3,
	172, 3, 173, 3, 173, 3, 174, 3, 174, 3, 175, 3, 175, 3, 176, 3, 176, 3,
	177, 3, 177, 3, 178, 3, 178, 3, 179, 3, 179, 3, 179, 3, 180, 3, 180, 3,
	181, 3, 181, 3, 181, 3, 182, 3, 182, 3, 182, 3, 183, 3, 183, 3, 183, 3,
	184, 3, 184, 3, 184, 3, 185, 3, 185, 3, 185, 3, 186, 3, 186, 3, 186, 3,
	187, 3, 187, 3, 187, 3, 188, 3, 188, 3, 188, 3, 189, 3, 189, 3, 189, 3,
	190, 3, 190, 3, 190, 3, 191, 3, 191, 3, 191, 3, 192, 3, 192, 3, 192, 3,
	193, 3, 193, 3, 193, 3, 194, 3, 194, 3, 194, 3, 195, 3, 195, 3, 195, 3,
	196, 3, 196, 3, 196, 3, 197, 3, 197, 3, 198, 3, 198, 3, 199, 3, 199, 5,
	199, 1011, 10, 199, 3, 200, 3, 200, 3, 201, 3, 201, 3, 202, 3, 202, 3,
	202, 3, 203, 3, 203, 3, 203, 3, 203, 3, 204, 3, 204, 6, 204, 1026, 10,
	204, 13, 204, 14, 204, 1027, 3, 204, 3, 204, 3, 205, 5, 205, 1033, 10,
	205, 3, 529, 2, 206, 3, 3, 5, 2, 7, 2, 9, 2, 11, 2, 13, 4, 15, 5, 17, 6,
	19, 2, 21, 2, 23, 7, 25, 2, 27, 2, 29, 2, 31, 2, 33, 2, 35, 8, 37, 9, 39,
	10, 41, 11, 43, 12, 45, 13, 47, 14, 49, 15, 51, 16, 53, 17, 55, 18, 57,
	19, 59, 20, 61, 21, 63, 22, 65, 23, 67, 24, 69, 25, 71, 26, 73, 27, 75,
	28, 77, 29, 79, 30, 81, 31, 83, 32, 85, 33, 87, 34, 89, 35, 91, 36, 93,
	37, 95, 38, 97, 39, 99, 40, 101, 41, 103, 2, 105, 2, 107, 42, 109, 43,
	111, 2, 113, 2, 115, 44, 117, 2, 119, 2, 121, 2, 123, 45, 125, 2, 127,
	2, 129, 2, 131, 46, 133, 47, 135, 48, 137, 49, 139, 50, 141, 51, 143, 52,
	145, 53, 147, 54, 149, 55, 151, 56, 153, 57, 155, 58, 157, 59, 159, 60,
	161, 61, 163, 62, 165, 63, 167, 64, 169, 65, 171, 66, 173, 67, 175, 68,
	177, 69, 179, 70, 181, 71, 183, 72, 185, 73, 187, 74, 189, 75, 191, 76,
	193, 77, 195, 78, 197, 79, 199, 80, 201, 81, 203, 82, 205, 83, 207, 84,
	209, 2, 211, 85, 213, 86, 215, 87, 217, 88, 219, 89, 221, 90, 223, 91,
	225, 92, 227, 93, 229, 94, 231, 95, 233, 96, 235, 97, 237, 98, 239, 99,
	241, 100, 243, 101, 245, 102, 247, 103, 249, 104, 251, 105, 253, 106, 255,
	107, 257, 108, 259, 109, 261, 110, 263, 111, 265, 112, 267, 113, 269, 114,
	271, 115, 273, 116, 275, 117, 277, 118, 279, 119, 281, 120, 283, 121, 285,
	122, 287, 123, 289, 124, 291, 125, 293, 126, 295, 127, 297, 128, 299, 129,
	301, 130, 303, 131, 305, 132, 307, 133, 309, 134, 311, 135, 313, 136, 315,
	137, 317, 138, 319, 139, 321, 140, 323, 141, 325, 142, 327, 143, 329, 144,
	331, 145, 333, 146, 335, 147, 337, 148, 339, 149, 341, 150, 343, 151, 345,
	152, 347, 153, 349, 154, 351, 155, 353, 156, 355, 157, 357, 158, 359, 159,
	361, 160, 363, 161, 365, 162, 367, 163, 369, 164, 371, 165, 373, 166, 375,
	167, 377, 168, 379, 169, 381, 170, 383, 171, 385, 172, 387, 173, 389, 174,
	391, 175, 393, 176, 395, 177, 397, 178, 399, 179, 401, 180, 403, 181, 405,
	182, 407, 183, 409, 2, 3, 2, 11, 52, 2, 67, 92, 99, 124, 194, 216, 218,
	248, 250, 261, 264, 265, 270, 273, 276, 279, 284, 303, 307, 307, 323, 324,
	329, 330, 338, 341, 346, 355, 358, 359, 368, 371, 383, 384, 915, 931, 933,
	939, 947, 971, 979, 980, 983, 984, 988, 995, 1010, 1011, 1015, 1015, 8460,
	8462, 8466, 8469, 8477, 8478, 8490, 8490, 8494, 8495, 8497, 8499, 8501,
	8506, 63156, 63159, 63161, 63161, 63163, 63166, 63168, 63169, 63171, 63234,
	63282, 63283, 63346, 63346, 63348, 63349, 63352, 63352, 63355, 63356, 63359,
	63362, 63364, 63373, 63375, 63378, 63381, 63388, 63390, 63396, 63398, 63423,
	63490, 63541, 64259, 64260, 67, 2, 38, 38, 163, 165, 167, 167, 169, 169,
	171, 171, 173, 173, 176, 176, 178, 178, 183, 184, 186, 186, 189, 189, 193,
	193, 713, 713, 730, 730, 8213, 8214, 8226, 8228, 8232, 8232, 8244, 8245,
	8247, 8248, 8290, 8290, 8366, 8366, 8465, 8465, 8484, 8484, 8489, 8489,
	8493, 8493, 8631, 8631, 8711, 8711, 8736, 8740, 8944, 8947, 8962, 8962,
	8986, 8986, 8988, 8988, 9142, 9143, 9474, 9474, 9476, 9476, 9634, 9635,
	9644, 9644, 9648, 9649, 9652, 9653, 9662, 9663, 9666, 9666, 9672, 9673,
	9677, 9677, 9681, 9681, 9704, 9704, 9725, 9726, 9735, 9735, 9787, 9788,
	9826, 9829, 9839, 9841, 10040, 10040, 62370, 62370, 62394, 62395, 62761,
	62762, 63266, 63269, 63271, 63271, 63307, 63308, 63311, 63321, 63330, 63330,
	63333, 63333, 63336, 63336, 63338, 63342, 63446, 63446, 63490, 63541, 65079,
	65082, 3, 2, 50, 59, 4, 2, 67, 92, 99, 124, 4, 2, 36, 36, 94, 94, 10, 2,
	36, 36, 41, 41, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 118, 118,
	5, 2, 50, 59, 67, 72, 99, 104, 4, 2, 11, 11, 15, 15, 9, 2, 34, 34, 8199,
	8199, 8203, 8204, 8289, 8289, 9253, 9253, 62338, 62338, 62340, 62342, 2,
	1041, 2, 3, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39,
	3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2,
	47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2,
	2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2,
	2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2,
	2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3,
	2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85,
	3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2,
	93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2,
	2, 101, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 115, 3,
	2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2, 2, 2, 2,
	135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 141, 3, 2,
	2, 2, 2, 143, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2, 147, 3, 2, 2, 2, 2, 149,
	3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 2, 155, 3, 2, 2, 2,
	2, 157, 3, 2, 2, 2, 2, 159, 3, 2, 2, 2, 2, 161, 3, 2, 2, 2, 2, 163, 3,
	2, 2, 2, 2, 165, 3, 2, 2, 2, 2, 167, 3, 2, 2, 2, 2, 169, 3, 2, 2, 2, 2,
	171, 3, 2, 2, 2, 2, 173, 3, 2, 2, 2, 2, 175, 3, 2, 2, 2, 2, 177, 3, 2,
	2, 2, 2, 179, 3, 2, 2, 2, 2, 181, 3, 2, 2, 2, 2, 183, 3, 2, 2, 2, 2, 185,
	3, 2, 2, 2, 2, 187, 3, 2, 2, 2, 2, 189, 3, 2, 2, 2, 2, 191, 3, 2, 2, 2,
	2, 193, 3, 2, 2, 2, 2, 195, 3, 2, 2, 2, 2, 197, 3, 2, 2, 2, 2, 199, 3,
	2, 2, 2, 2, 201, 3, 2, 2, 2, 2, 203, 3, 2, 2, 2, 2, 205, 3, 2, 2, 2, 2,
	207, 3, 2, 2, 2, 2, 211, 3, 2, 2, 2, 2, 213, 3, 2, 2, 2, 2, 215, 3, 2,
	2, 2, 2, 217, 3, 2, 2, 2, 2, 219, 3, 2, 2, 2, 2, 221, 3, 2, 2, 2, 2, 223,
	3, 2, 2, 2, 2, 225, 3, 2, 2, 2, 2, 227, 3, 2, 2, 2, 2, 229, 3, 2, 2, 2,
	2, 231, 3, 2, 2, 2, 2, 233, 3, 2, 2, 2, 2, 235, 3, 2, 2, 2, 2, 237, 3,
	2, 2, 2, 2, 239, 3, 2, 2, 2, 2, 241, 3, 2, 2, 2, 2, 243, 3, 2, 2, 2, 2,
	245, 3, 2, 2, 2, 2, 247, 3, 2, 2, 2, 2, 249, 3, 2, 2, 2, 2, 251, 3, 2,
	2, 2, 2, 253, 3, 2, 2, 2, 2, 255, 3, 2, 2, 2, 2, 257, 3, 2, 2, 2, 2, 259,
	3, 2, 2, 2, 2, 261, 3, 2, 2, 2, 2, 263, 3, 2, 2, 2, 2, 265, 3, 2, 2, 2,
	2, 267, 3, 2, 2, 2, 2, 269, 3, 2, 2, 2, 2, 271, 3, 2, 2, 2, 2, 273, 3,
	2, 2, 2, 2, 275, 3, 2, 2, 2, 2, 277, 3, 2, 2, 2, 2, 279, 3, 2, 2, 2, 2,
	281, 3, 2, 2, 2, 2, 283, 3, 2, 2, 2, 2, 285, 3, 2, 2, 2, 2, 287, 3, 2,
	2, 2, 2, 289, 3, 2, 2, 2, 2, 291, 3, 2, 2, 2, 2, 293, 3, 2, 2, 2, 2, 295,
	3, 2, 2, 2, 2, 297, 3, 2, 2, 2, 2, 299, 3, 2, 2, 2, 2, 301, 3, 2, 2, 2,
	2, 303, 3, 2, 2, 2, 2, 305, 3, 2, 2, 2, 2, 307, 3, 2, 2, 2, 2, 309, 3,
	2, 2, 2, 2, 311, 3, 2, 2, 2, 2, 313, 3, 2, 2, 2, 2, 315, 3, 2, 2, 2, 2,
	317, 3, 2, 2, 2, 2, 319, 3, 2, 2, 2, 2, 321, 3, 2, 2, 2, 2, 323, 3, 2,
	2, 2, 2, 325, 3, 2, 2, 2, 2, 327, 3, 2, 2, 2, 2, 329, 3, 2, 2, 2, 2, 331,
	3, 2, 2, 2, 2, 333, 3, 2, 2, 2, 2, 335, 3, 2, 2, 2, 2, 337, 3, 2, 2, 2,
	2, 339, 3, 2, 2, 2, 2, 341, 3, 2, 2, 2, 2, 343, 3, 2, 2, 2, 2, 345, 3,
	2, 2, 2, 2, 347, 3, 2, 2, 2, 2, 349, 3, 2, 2, 2, 2, 351, 3, 2, 2, 2, 2,
	353, 3, 2, 2, 2, 2, 355, 3, 2, 2, 2, 2, 357, 3, 2, 2, 2, 2, 359, 3, 2,
	2, 2, 2, 361, 3, 2, 2, 2, 2, 363, 3, 2, 2, 2, 2, 365, 3, 2, 2, 2, 2, 367,
	3, 2, 2, 2, 2, 369, 3, 2, 2, 2, 2, 371, 3, 2, 2, 2, 2, 373, 3, 2, 2, 2,
	2, 375, 3, 2, 2, 2, 2, 377, 3, 2, 2, 2, 2, 379, 3, 2, 2, 2, 2, 381, 3,
	2, 2, 2, 2, 383, 3, 2, 2, 2, 2, 385, 3, 2, 2, 2, 2, 387, 3, 2, 2, 2, 2,
	389, 3, 2, 2, 2, 2, 391, 3, 2, 2, 2, 2, 393, 3, 2, 2, 2, 2, 395, 3, 2,
	2, 2, 2, 397, 3, 2, 2, 2, 2, 399, 3, 2, 2, 2, 2, 401, 3, 2, 2, 2, 2, 403,
	3, 2, 2, 2, 2, 405, 3, 2, 2, 2, 2, 407, 3, 2, 2, 2, 3, 412, 3, 2, 2, 2,
	5, 424, 3, 2, 2, 2, 7, 428, 3, 2, 2, 2, 9, 430, 3, 2, 2, 2, 11, 432, 3,
	2, 2, 2, 13, 451, 3, 2, 2, 2, 15, 453, 3, 2, 2, 2, 17, 485, 3, 2, 2, 2,
	19, 489, 3, 2, 2, 2, 21, 493, 3, 2, 2, 2, 23, 495, 3, 2, 2, 2, 25, 502,
	3, 2, 2, 2, 27, 508, 3, 2, 2, 2, 29, 514, 3, 2, 2, 2, 31, 516, 3, 2, 2,
	2, 33, 523, 3, 2, 2, 2, 35, 525, 3, 2, 2, 2, 37, 536, 3, 2, 2, 2, 39, 539,
	3, 2, 2, 2, 41, 542, 3, 2, 2, 2, 43, 545, 3, 2, 2, 2, 45, 548, 3, 2, 2,
	2, 47, 551, 3, 2, 2, 2, 49, 554, 3, 2, 2, 2, 51, 556, 3, 2, 2, 2, 53, 559,
	3, 2, 2, 2, 55, 562, 3, 2, 2, 2, 57, 565, 3, 2, 2, 2, 59, 568, 3, 2, 2,
	2, 61, 571, 3, 2, 2, 2, 63, 574, 3, 2, 2, 2, 65, 577, 3, 2, 2, 2, 67, 580,
	3, 2, 2, 2, 69, 583, 3, 2, 2, 2, 71, 585, 3, 2, 2, 2, 73, 588, 3, 2, 2,
	2, 75, 591, 3, 2, 2, 2, 77, 594, 3, 2, 2, 2, 79, 597, 3, 2, 2, 2, 81, 600,
	3, 2, 2, 2, 83, 603, 3, 2, 2, 2, 85, 606, 3, 2, 2, 2, 87, 608, 3, 2, 2,
	2, 89, 610, 3, 2, 2, 2, 91, 612, 3, 2, 2, 2, 93, 615, 3, 2, 2, 2, 95, 619,
	3, 2, 2, 2, 97, 622, 3, 2, 2, 2, 99, 626, 3, 2, 2, 2, 101, 632, 3, 2, 2,
	2, 103, 634, 3, 2, 2, 2, 105, 636, 3, 2, 2, 2, 107, 639, 3, 2, 2, 2, 109,
	643, 3, 2, 2, 2, 111, 645, 3, 2, 2, 2, 113, 648, 3, 2, 2, 2, 115, 653,
	3, 2, 2, 2, 117, 655, 3, 2, 2, 2, 119, 658, 3, 2, 2, 2, 121, 660, 3, 2,
	2, 2, 123, 665, 3, 2, 2, 2, 125, 667, 3, 2, 2, 2, 127, 670, 3, 2, 2, 2,
	129, 672, 3, 2, 2, 2, 131, 674, 3, 2, 2, 2, 133, 676, 3, 2, 2, 2, 135,
	678, 3, 2, 2, 2, 137, 680, 3, 2, 2, 2, 139, 682, 3, 2, 2, 2, 141, 684,
	3, 2, 2, 2, 143, 686, 3, 2, 2, 2, 145, 688, 3, 2, 2, 2, 147, 690, 3, 2,
	2, 2, 149, 692, 3, 2, 2, 2, 151, 694, 3, 2, 2, 2, 153, 696, 3, 2, 2, 2,
	155, 699, 3, 2, 2, 2, 157, 701, 3, 2, 2, 2, 159, 703, 3, 2, 2, 2, 161,
	705, 3, 2, 2, 2, 163, 707, 3, 2, 2, 2, 165, 709, 3, 2, 2, 2, 167, 711,
	3, 2, 2, 2, 169, 713, 3, 2, 2, 2, 171, 715, 3, 2, 2, 2, 173, 717, 3, 2,
	2, 2, 175, 719, 3, 2, 2, 2, 177, 721, 3, 2, 2, 2, 179, 723, 3, 2, 2, 2,
	181, 725, 3, 2, 2, 2, 183, 727, 3, 2, 2, 2, 185, 729, 3, 2, 2, 2, 187,
	731, 3, 2, 2, 2, 189, 733, 3, 2, 2, 2, 191, 735, 3, 2, 2, 2, 193, 739,
	3, 2, 2, 2, 195, 742, 3, 2, 2, 2, 197, 744, 3, 2, 2, 2, 199, 748, 3, 2,
	2, 2, 201, 751, 3, 2, 2, 2, 203, 754, 3, 2, 2, 2, 205, 756, 3, 2, 2, 2,
	207, 760, 3, 2, 2, 2, 209, 764, 3, 2, 2, 2, 211, 766, 3, 2, 2, 2, 213,
	769, 3, 2, 2, 2, 215, 771, 3, 2, 2, 2, 217, 774, 3, 2, 2, 2, 219, 777,
	3, 2, 2, 2, 221, 780, 3, 2, 2, 2, 223, 782, 3, 2, 2, 2, 225, 785, 3, 2,
	2, 2, 227, 787, 3, 2, 2, 2, 229, 790, 3, 2, 2, 2, 231, 794, 3, 2, 2, 2,
	233, 797, 3, 2, 2, 2, 235, 800, 3, 2, 2, 2, 237, 803, 3, 2, 2, 2, 239,
	806, 3, 2, 2, 2, 241, 808, 3, 2, 2, 2, 243, 811, 3, 2, 2, 2, 245, 814,
	3, 2, 2, 2, 247, 817, 3, 2, 2, 2, 249, 820, 3, 2, 2, 2, 251, 822, 3, 2,
	2, 2, 253, 826, 3, 2, 2, 2, 255, 829, 3, 2, 2, 2, 257, 832, 3, 2, 2, 2,
	259, 835, 3, 2, 2, 2, 261, 837, 3, 2, 2, 2, 263, 839, 3, 2, 2, 2, 265,
	842, 3, 2, 2, 2, 267, 844, 3, 2, 2, 2, 269, 847, 3, 2, 2, 2, 271, 850,
	3, 2, 2, 2, 273, 853, 3, 2, 2, 2, 275, 857, 3, 2, 2, 2, 277, 860, 3, 2,
	2, 2, 279, 863, 3, 2, 2, 2, 281, 865, 3, 2, 2, 2, 283, 868, 3, 2, 2, 2,
	285, 871, 3, 2, 2, 2, 287, 875, 3, 2, 2, 2, 289, 878, 3, 2, 2, 2, 291,
	880, 3, 2, 2, 2, 293, 883, 3, 2, 2, 2, 295, 885, 3, 2, 2, 2, 297, 887,
	3, 2, 2, 2, 299, 889, 3, 2, 2, 2, 301, 891, 3, 2, 2, 2, 303, 893, 3, 2,
	2, 2, 305, 895, 3, 2, 2, 2, 307, 900, 3, 2, 2, 2, 309, 902, 3, 2, 2, 2,
	311, 904, 3, 2, 2, 2, 313, 906, 3, 2, 2, 2, 315, 908, 3, 2, 2, 2, 317,
	910, 3, 2, 2, 2, 319, 912, 3, 2, 2, 2, 321, 914, 3, 2, 2, 2, 323, 916,
	3, 2, 2, 2, 325, 918, 3, 2, 2, 2, 327, 920, 3, 2, 2, 2, 329, 923, 3, 2,
	2, 2, 331, 925, 3, 2, 2, 2, 333, 927, 3, 2, 2, 2, 335, 929, 3, 2, 2, 2,
	337, 931, 3, 2, 2, 2, 339, 933, 3, 2, 2, 2, 341, 935, 3, 2, 2, 2, 343,
	937, 3, 2, 2, 2, 345, 939, 3, 2, 2, 2, 347, 941, 3, 2, 2, 2, 349, 943,
	3, 2, 2, 2, 351, 945, 3, 2, 2, 2, 353, 947, 3, 2, 2, 2, 355, 949, 3, 2,
	2, 2, 357, 951, 3, 2, 2, 2, 359, 954, 3, 2, 2, 2, 361, 956, 3, 2, 2, 2,
	363, 959, 3, 2, 2, 2, 365, 962, 3, 2, 2, 2, 367, 965, 3, 2, 2, 2, 369,
	968, 3, 2, 2, 2, 371, 971, 3, 2, 2, 2, 373, 974, 3, 2, 2, 2, 375, 977,
	3, 2, 2, 2, 377, 980, 3, 2, 2, 2, 379, 983, 3, 2, 2, 2, 381, 986, 3, 2,
	2, 2, 383, 989, 3, 2, 2, 2, 385, 992, 3, 2, 2, 2, 387, 995, 3, 2, 2, 2,
	389, 998, 3, 2, 2, 2, 391, 1001, 3, 2, 2, 2, 393, 1004, 3, 2, 2, 2, 395,
	1006, 3, 2, 2, 2, 397, 1010, 3, 2, 2, 2, 399, 1012, 3, 2, 2, 2, 401, 1014,
	3, 2, 2, 2, 403, 1016, 3, 2, 2, 2, 405, 1019, 3, 2, 2, 2, 407, 1025, 3,
	2, 2, 2, 409, 1032, 3, 2, 2, 2, 411, 413, 5, 7, 4, 2, 412, 411, 3, 2, 2,
	2, 413, 414, 3, 2, 2, 2, 414, 412, 3, 2, 2, 2, 414, 415, 3, 2, 2, 2, 415,
	419, 3, 2, 2, 2, 416, 418, 5, 5, 3, 2, 417, 416, 3, 2, 2, 2, 418, 421,
	3, 2, 2, 2, 419, 417, 3, 2, 2, 2, 419, 420, 3, 2, 2, 2, 420, 4, 3, 2, 2,
	2, 421, 419, 3, 2, 2, 2, 422, 425, 5, 7, 4, 2, 423, 425, 5, 19, 10, 2,
	424, 422, 3, 2, 2, 2, 424, 423, 3, 2, 2, 2, 425, 6, 3, 2, 2, 2, 426, 429,
	5, 9, 5, 2, 427, 429, 5, 11, 6, 2, 428, 426, 3, 2, 2, 2, 428, 427, 3, 2,
	2, 2, 429, 8, 3, 2, 2, 2, 430, 431, 9, 2, 2, 2, 431, 10, 3, 2, 2, 2, 432,
	433, 9, 3, 2, 2, 433, 12, 3, 2, 2, 2, 434, 435, 5, 17, 9, 2, 435, 439,
	5, 261, 131, 2, 436, 438, 5, 19, 10, 2, 437, 436, 3, 2, 2, 2, 438, 441,
	3, 2, 2, 2, 439, 437, 3, 2, 2, 2, 439, 440, 3, 2, 2, 2, 440, 452, 3, 2,
	2, 2, 441, 439, 3, 2, 2, 2, 442, 444, 5, 19, 10, 2, 443, 442, 3, 2, 2,
	2, 444, 447, 3, 2, 2, 2, 445, 443, 3, 2, 2, 2, 445, 446, 3, 2, 2, 2, 446,
	448, 3, 2, 2, 2, 447, 445, 3, 2, 2, 2, 448, 449, 5, 261, 131, 2, 449, 450,
	5, 17, 9, 2, 450, 452, 3, 2, 2, 2, 451, 434, 3, 2, 2, 2, 451, 445, 3, 2,
	2, 2, 452, 14, 3, 2, 2, 2, 453, 482, 5, 263, 132, 2, 454, 456, 5, 21, 11,
	2, 455, 454, 3, 2, 2, 2, 456, 457, 3, 2, 2, 2, 457, 455, 3, 2, 2, 2, 457,
	458, 3, 2, 2, 2, 458, 460, 3, 2, 2, 2, 459, 461, 5, 261, 131, 2, 460, 459,
	3, 2, 2, 2, 460, 461, 3, 2, 2, 2, 461, 465, 3, 2, 2, 2, 462, 464, 5, 21,
	11, 2, 463, 462, 3, 2, 2, 2, 464, 467, 3, 2, 2, 2, 465, 463, 3, 2, 2, 2,
	465, 466, 3, 2, 2, 2, 466, 483, 3, 2, 2, 2, 467, 465, 3, 2, 2, 2, 468,
	470, 5, 21, 11, 2, 469, 468, 3, 2, 2, 2, 470, 473, 3, 2, 2, 2, 471, 469,
	3, 2, 2, 2, 471, 472, 3, 2, 2, 2, 472, 475, 3, 2, 2, 2, 473, 471, 3, 2,
	2, 2, 474, 476, 5, 261, 131, 2, 475, 474, 3, 2, 2, 2, 475, 476, 3, 2, 2,
	2, 476, 478, 3, 2, 2, 2, 477, 479, 5, 21, 11, 2, 478, 477, 3, 2, 2, 2,
	479, 480, 3, 2, 2, 2, 480, 478, 3, 2, 2, 2, 480, 481, 3, 2, 2, 2, 481,
	483, 3, 2, 2, 2, 482, 455, 3, 2, 2, 2, 482, 471, 3, 2, 2, 2, 483, 16, 3,
	2, 2, 2, 484, 486, 5, 19, 10, 2, 485, 484, 3, 2, 2, 2, 486, 487, 3, 2,
	2, 2, 487, 485, 3, 2, 2, 2, 487, 488, 3, 2, 2, 2, 488, 18, 3, 2, 2, 2,
	489, 490, 9, 4, 2, 2, 490, 20, 3, 2, 2, 2, 491, 494, 5, 19, 10, 2, 492,
	494, 9, 5, 2, 2, 493, 491, 3, 2, 2, 2, 493, 492, 3, 2, 2, 2, 494, 22, 3,
	2, 2, 2, 495, 497, 5, 89, 45, 2, 496, 498, 5, 25, 13, 2, 497, 496, 3, 2,
	2, 2, 497, 498, 3, 2, 2, 2, 498, 499, 3, 2, 2, 2, 499, 500, 5, 89, 45,
	2, 500, 24, 3, 2, 2, 2, 501, 503, 5, 27, 14, 2, 502, 501, 3, 2, 2, 2, 503,
	504, 3, 2, 2, 2, 504, 502, 3, 2, 2, 2, 504, 505, 3, 2, 2, 2, 505, 26, 3,
	2, 2, 2, 506, 509, 10, 6, 2, 2, 507, 509, 5, 29, 15, 2, 508, 506, 3, 2,
	2, 2, 508, 507, 3, 2, 2, 2, 509, 28, 3, 2, 2, 2, 510, 511, 5, 299, 150,
	2, 511, 512, 9, 7, 2, 2, 512, 515, 3, 2, 2, 2, 513, 515, 5, 31, 16, 2,
	514, 510, 3, 2, 2, 2, 514, 513, 3, 2, 2, 2, 515, 30, 3, 2, 2, 2, 516, 517,
	5, 299, 150, 2, 517, 518, 5, 213, 107, 2, 518, 519, 5, 33, 17, 2, 519,
	520, 5, 33, 17, 2, 520, 521, 5, 33, 17, 2, 521, 522, 5, 33, 17, 2, 522,
	32, 3, 2, 2, 2, 523, 524, 9, 8, 2, 2, 524, 34, 3, 2, 2, 2, 525, 529, 5,
	51, 26, 2, 526, 528, 11, 2, 2, 2, 527, 526, 3, 2, 2, 2, 528, 531, 3, 2,
	2, 2, 529, 530, 3, 2, 2, 2, 529, 527, 3, 2, 2, 2, 530, 532, 3, 2, 2, 2,
	531, 529, 3, 2, 2, 2, 532, 533, 5, 53, 27, 2, 533, 534, 3, 2, 2, 2, 534,
	535, 8, 18, 2, 2, 535, 36, 3, 2, 2, 2, 536, 537, 7, 42, 2, 2, 537, 538,
	8, 19, 3, 2, 538, 38, 3, 2, 2, 2, 539, 540, 7, 43, 2, 2, 540, 541, 8, 20,
	4, 2, 541, 40, 3, 2, 2, 2, 542, 543, 7, 125, 2, 2, 543, 544, 8, 21, 5,
	2, 544, 42, 3, 2, 2, 2, 545, 546, 7, 127, 2, 2, 546, 547, 8, 22, 6, 2,
	547, 44, 3, 2, 2, 2, 548, 549, 7, 93, 2, 2, 549, 550, 8, 23, 7, 2, 550,
	46, 3, 2, 2, 2, 551, 552, 7, 95, 2, 2, 552, 553, 8, 24, 8, 2, 553, 48,
	3, 2, 2, 2, 554, 555, 7, 46, 2, 2, 555, 50, 3, 2, 2, 2, 556, 557, 7, 42,
	2, 2, 557, 558, 7, 44, 2, 2, 558, 52, 3, 2, 2, 2, 559, 560, 7, 44, 2, 2,
	560, 561, 7, 43, 2, 2, 561, 54, 3, 2, 2, 2, 562, 563, 7, 9003, 2, 2, 563,
	564, 8, 28, 9, 2, 564, 56, 3, 2, 2, 2, 565, 566, 7, 9004, 2, 2, 566, 567,
	8, 29, 10, 2, 567, 58, 3, 2, 2, 2, 568, 569, 7, 8972, 2, 2, 569, 570, 8,
	30, 11, 2, 570, 60, 3, 2, 2, 2, 571, 572, 7, 8973, 2, 2, 572, 573, 8, 31,
	12, 2, 573, 62, 3, 2, 2, 2, 574, 575, 7, 8970, 2, 2, 575, 576, 8, 32, 13,
	2, 576, 64, 3, 2, 2, 2, 577, 578, 7, 8971, 2, 2, 578, 579, 8, 33, 14, 2,
	579, 66, 3, 2, 2, 2, 580, 581, 7, 126, 2, 2, 581, 582, 7, 126, 2, 2, 582,
	68, 3, 2, 2, 2, 583, 584, 7, 126, 2, 2, 584, 70, 3, 2, 2, 2, 585, 586,
	7, 12316, 2, 2, 586, 587, 8, 36, 15, 2, 587, 72, 3, 2, 2, 2, 588, 589,
	7, 12317, 2, 2, 589, 590, 8, 37, 16, 2, 590, 74, 3, 2, 2, 2, 591, 592,
	7, 62981, 2, 2, 592, 593, 8, 38, 17, 2, 593, 76, 3, 2, 2, 2, 594, 595,
	7, 62982, 2, 2, 595, 596, 8, 39, 18, 2, 596, 78, 3, 2, 2, 2, 597, 598,
	7, 62983, 2, 2, 598, 599, 8, 40, 19, 2, 599, 80, 3, 2, 2, 2, 600, 601,
	7, 62984, 2, 2, 601, 602, 8, 41, 20, 2, 602, 82, 3, 2, 2, 2, 603, 604,
	7, 98, 2, 2, 604, 605, 7, 98, 2, 2, 605, 84, 3, 2, 2, 2, 606, 607, 7, 98,
	2, 2, 607, 86, 3, 2, 2, 2, 608, 609, 7, 41, 2, 2, 609, 88, 3, 2, 2, 2,
	610, 611, 7, 36, 2, 2, 611, 90, 3, 2, 2, 2, 612, 613, 7, 62, 2, 2, 613,
	614, 7, 62, 2, 2, 614, 92, 3, 2, 2, 2, 615, 616, 7, 64, 2, 2, 616, 617,
	7, 64, 2, 2, 617, 618, 7, 64, 2, 2, 618, 94, 3, 2, 2, 2, 619, 620, 7, 64,
	2, 2, 620, 621, 7, 64, 2, 2, 621, 96, 3, 2, 2, 2, 622, 623, 7, 63, 2, 2,
	623, 624, 7, 63, 2, 2, 624, 625, 7, 63, 2, 2, 625, 98, 3, 2, 2, 2, 626,
	627, 7, 63, 2, 2, 627, 628, 7, 35, 2, 2, 628, 629, 7, 63, 2, 2, 629, 100,
	3, 2, 2, 2, 630, 633, 5, 103, 52, 2, 631, 633, 5, 105, 53, 2, 632, 630,
	3, 2, 2, 2, 632, 631, 3, 2, 2, 2, 633, 102, 3, 2, 2, 2, 634, 635, 7, 63451,
	2, 2, 635, 104, 3, 2, 2, 2, 636, 637, 7, 63, 2, 2, 637, 638, 7, 63, 2,
	2, 638, 106, 3, 2, 2, 2, 639, 640, 7, 63, 2, 2, 640, 108, 3, 2, 2, 2, 641,
	644, 5, 111, 56, 2, 642, 644, 5, 113, 57, 2, 643, 641, 3, 2, 2, 2, 643,
	642, 3, 2, 2, 2, 644, 110, 3, 2, 2, 2, 645, 646, 7, 35, 2, 2, 646, 647,
	7, 63, 2, 2, 647, 112, 3, 2, 2, 2, 648, 649, 7, 8802, 2, 2, 649, 114, 3,
	2, 2, 2, 650, 654, 5, 117, 59, 2, 651, 654, 5, 119, 60, 2, 652, 654, 5,
	121, 61, 2, 653, 650, 3, 2, 2, 2, 653, 651, 3, 2, 2, 2, 653, 652, 3, 2,
	2, 2, 654, 116, 3, 2, 2, 2, 655, 656, 7, 64, 2, 2, 656, 657, 7, 63, 2,
	2, 657, 118, 3, 2, 2, 2, 658, 659, 7, 8807, 2, 2, 659, 120, 3, 2, 2, 2,
	660, 661, 7, 10880, 2, 2, 661, 122, 3, 2, 2, 2, 662, 666, 5, 125, 63, 2,
	663, 666, 5, 127, 64, 2, 664, 666, 5, 129, 65, 2, 665, 662, 3, 2, 2, 2,
	665, 663, 3, 2, 2, 2, 665, 664, 3, 2, 2, 2, 666, 124, 3, 2, 2, 2, 667,
	668, 7, 62, 2, 2, 668, 669, 7, 63, 2, 2, 669, 126, 3, 2, 2, 2, 670, 671,
	7, 8806, 2, 2, 671, 128, 3, 2, 2, 2, 672, 673, 7, 10879, 2, 2, 673, 130,
	3, 2, 2, 2, 674, 675, 7, 62, 2, 2, 675, 132, 3, 2, 2, 2, 676, 677, 7, 64,
	2, 2, 677, 134, 3, 2, 2, 2, 678, 679, 7, 62418, 2, 2, 679, 136, 3, 2, 2,
	2, 680, 681, 7, 62419, 2, 2, 681, 138, 3, 2, 2, 2, 682, 683, 7, 8743, 2,
	2, 683, 140, 3, 2, 2, 2, 684, 685, 7, 8744, 2, 2, 685, 142, 3, 2, 2, 2,
	686, 687, 7, 8714, 2, 2, 687, 144, 3, 2, 2, 2, 688, 689, 7, 8715, 2, 2,
	689, 146, 3, 2, 2, 2, 690, 691, 7, 8836, 2, 2, 691, 148, 3, 2, 2, 2, 692,
	693, 7, 8837, 2, 2, 693, 150, 3, 2, 2, 2, 694, 695, 7, 174, 2, 2, 695,
	152, 3, 2, 2, 2, 696, 697, 7, 40, 2, 2, 697, 698, 7, 40, 2, 2, 698, 154,
	3, 2, 2, 2, 699, 700, 7, 8745, 2, 2, 700, 156, 3, 2, 2, 2, 701, 702, 7,
	8894, 2, 2, 702, 158, 3, 2, 2, 2, 703, 704, 7, 8893, 2, 2, 704, 160, 3,
	2, 2, 2, 705, 706, 7, 62628, 2, 2, 706, 162, 3, 2, 2, 2, 707, 708, 7, 8746,
	2, 2, 708, 164, 3, 2, 2, 2, 709, 710, 7, 8895, 2, 2, 710, 166, 3, 2, 2,
	2, 711, 712, 7, 10728, 2, 2, 712, 168, 3, 2, 2, 2, 713, 714, 7, 62757,
	2, 2, 714, 170, 3, 2, 2, 2, 715, 716, 7, 10610, 2, 2, 716, 172, 3, 2, 2,
	2, 717, 718, 7, 8868, 2, 2, 718, 174, 3, 2, 2, 2, 719, 720, 7, 8874, 2,
	2, 720, 176, 3, 2, 2, 2, 721, 722, 7, 8869, 2, 2, 722, 178, 3, 2, 2, 2,
	723, 724, 7, 10982, 2, 2, 724, 180, 3, 2, 2, 2, 725, 726, 7, 8871, 2, 2,
	726, 182, 3, 2, 2, 2, 727, 728, 7, 8870, 2, 2, 728, 184, 3, 2, 2, 2, 729,
	730, 7, 8719, 2, 2, 730, 186, 3, 2, 2, 2, 731, 732, 7, 8758, 2, 2, 732,
	188, 3, 2, 2, 2, 733, 734, 7, 8759, 2, 2, 734, 190, 3, 2, 2, 2, 735, 736,
	7, 48, 2, 2, 736, 737, 7, 48, 2, 2, 737, 738, 7, 48, 2, 2, 738, 192, 3,
	2, 2, 2, 739, 740, 7, 48, 2, 2, 740, 741, 7, 48, 2, 2, 741, 194, 3, 2,
	2, 2, 742, 743, 7, 65, 2, 2, 743, 196, 3, 2, 2, 2, 744, 745, 7, 97, 2,
	2, 745, 746, 7, 97, 2, 2, 746, 747, 7, 97, 2, 2, 747, 198, 3, 2, 2, 2,
	748, 749, 7, 97, 2, 2, 749, 750, 7, 97, 2, 2, 750, 200, 3, 2, 2, 2, 751,
	752, 7, 97, 2, 2, 752, 753, 7, 48, 2, 2, 753, 202, 3, 2, 2, 2, 754, 755,
	7, 97, 2, 2, 755, 204, 3, 2, 2, 2, 756, 757, 5, 209, 105, 2, 757, 758,
	5, 17, 9, 2, 758, 206, 3, 2, 2, 2, 759, 761, 5, 209, 105, 2, 760, 759,
	3, 2, 2, 2, 761, 762, 3, 2, 2, 2, 762, 760, 3, 2, 2, 2, 762, 763, 3, 2,
	2, 2, 763, 208, 3, 2, 2, 2, 764, 765, 7, 39, 2, 2, 765, 210, 3, 2, 2, 2,
	766, 767, 7, 60, 2, 2, 767, 768, 7, 60, 2, 2, 768, 212, 3, 2, 2, 2, 769,
	770, 7, 60, 2, 2, 770, 214, 3, 2, 2, 2, 771, 772, 7, 128, 2, 2, 772, 773,
	7, 128, 2, 2, 773, 216, 3, 2, 2, 2, 774, 775, 7, 49, 2, 2, 775, 776, 7,
	61, 2, 2, 776, 218, 3, 2, 2, 2, 777, 778, 7, 47, 2, 2, 778, 779, 7, 64,
	2, 2, 779, 220, 3, 2, 2, 2, 780, 781, 7, 62756, 2, 2, 781, 222, 3, 2, 2,
	2, 782, 783, 7, 60, 2, 2, 783, 784, 7, 64, 2, 2, 784, 224, 3, 2, 2, 2,
	785, 786, 7, 62753, 2, 2, 786, 226, 3, 2, 2, 2, 787, 788, 7, 49, 2, 2,
	788, 789, 7, 48, 2, 2, 789, 228, 3, 2, 2, 2, 790, 791, 7, 49, 2, 2, 791,
	792, 7, 49, 2, 2, 792, 793, 7, 48, 2, 2, 793, 230, 3, 2, 2, 2, 794, 795,
	5, 239, 120, 2, 795, 796, 5, 17, 9, 2, 796, 232, 3, 2, 2, 2, 797, 798,
	5, 239, 120, 2, 798, 799, 5, 23, 12, 2, 799, 234, 3, 2, 2, 2, 800, 801,
	5, 237, 119, 2, 801, 802, 5, 17, 9, 2, 802, 236, 3, 2, 2, 2, 803, 804,
	7, 37, 2, 2, 804, 805, 7, 37, 2, 2, 805, 238, 3, 2, 2, 2, 806, 807, 7,
	37, 2, 2, 807, 240, 3, 2, 2, 2, 808, 809, 7, 45, 2, 2, 809, 810, 7, 63,
	2, 2, 810, 242, 3, 2, 2, 2, 811, 812, 7, 47, 2, 2, 812, 813, 7, 63, 2,
	2, 813, 244, 3, 2, 2, 2, 814, 815, 7, 44, 2, 2, 815, 816, 7, 63, 2, 2,
	816, 246, 3, 2, 2, 2, 817, 818, 7, 49, 2, 2, 818, 819, 7, 63, 2, 2, 819,
	248, 3, 2, 2, 2, 820, 821, 7, 40, 2, 2, 821, 250, 3, 2, 2, 2, 822, 823,
	7, 96, 2, 2, 823, 824, 7, 60, 2, 2, 824, 825, 7, 63, 2, 2, 825, 252, 3,
	2, 2, 2, 826, 827, 7, 60, 2, 2, 827, 828, 7, 63, 2, 2, 828, 254, 3, 2,
	2, 2, 829, 830, 7, 96, 2, 2, 830, 831, 7, 63, 2, 2, 831, 256, 3, 2, 2,
	2, 832, 833, 7, 49, 2, 2, 833, 834, 7, 60, 2, 2, 834, 258, 3, 2, 2, 2,
	835, 836, 7, 62627, 2, 2, 836, 260, 3, 2, 2, 2, 837, 838, 7, 48, 2, 2,
	838, 262, 3, 2, 2, 2, 839, 840, 7, 96, 2, 2, 840, 841, 7, 96, 2, 2, 841,
	264, 3, 2, 2, 2, 842, 843, 7, 96, 2, 2, 843, 266, 3, 2, 2, 2, 844, 845,
	7, 44, 2, 2, 845, 846, 7, 96, 2, 2, 846, 268, 3, 2, 2, 2, 847, 848, 7,
	45, 2, 2, 848, 849, 7, 45, 2, 2, 849, 270, 3, 2, 2, 2, 850, 851, 7, 47,
	2, 2, 851, 852, 7, 47, 2, 2, 852, 272, 3, 2, 2, 2, 853, 854, 7, 66, 2,
	2, 854, 855, 7, 66, 2, 2, 855, 856, 7, 66, 2, 2, 856, 274, 3, 2, 2, 2,
	857, 858, 7, 66, 2, 2, 858, 859, 7, 66, 2, 2, 859, 276, 3, 2, 2, 2, 860,
	861, 7, 66, 2, 2, 861, 862, 7, 44, 2, 2, 862, 278, 3, 2, 2, 2, 863, 864,
	7, 66, 2, 2, 864, 280, 3, 2, 2, 2, 865, 866, 7, 49, 2, 2, 866, 867, 7,
	66, 2, 2, 867, 282, 3, 2, 2, 2, 868, 869, 7, 49, 2, 2, 869, 870, 7, 44,
	2, 2, 870, 284, 3, 2, 2, 2, 871, 872, 7, 49, 2, 2, 872, 873, 7, 49, 2,
	2, 873, 874, 7, 66, 2, 2, 874, 286, 3, 2, 2, 2, 875, 876, 7, 35, 2, 2,
	876, 877, 7, 35, 2, 2, 877, 288, 3, 2, 2, 2, 878, 879, 7, 35, 2, 2, 879,
	290, 3, 2, 2, 2, 880, 881, 7, 62, 2, 2, 881, 882, 7, 64, 2, 2, 882, 292,
	3, 2, 2, 2, 883, 884, 7, 8749, 2, 2, 884, 294, 3, 2, 2, 2, 885, 886, 7,
	63310, 2, 2, 886, 296, 3, 2, 2, 2, 887, 888, 7, 62626, 2, 2, 888, 298,
	3, 2, 2, 2, 889, 890, 7, 94, 2, 2, 890, 300, 3, 2, 2, 2, 891, 892, 7, 8900,
	2, 2, 892, 302, 3, 2, 2, 2, 893, 894, 7, 8901, 2, 2, 894, 304, 3, 2, 2,
	2, 895, 896, 7, 61, 2, 2, 896, 897, 7, 61, 2, 2, 897, 898, 3, 2, 2, 2,
	898, 899, 8, 153, 21, 2, 899, 306, 3, 2, 2, 2, 900, 901, 7, 61, 2, 2, 901,
	308, 3, 2, 2, 2, 902, 903, 7, 62409, 2, 2, 903, 310, 3, 2, 2, 2, 904, 905,
	7, 62411, 2, 2, 905, 312, 3, 2, 2, 2, 906, 907, 7, 62416, 2, 2, 907, 314,
	3, 2, 2, 2, 908, 909, 7, 62410, 2, 2, 909, 316, 3, 2, 2, 2, 910, 911, 7,
	128, 2, 2, 911, 318, 3, 2, 2, 2, 912, 913, 7, 8713, 2, 2, 913, 320, 3,
	2, 2, 2, 914, 915, 7, 62754, 2, 2, 915, 322, 3, 2, 2, 2, 916, 917, 7, 8730,
	2, 2, 917, 324, 3, 2, 2, 2, 918, 919, 7, 8859, 2, 2, 919, 326, 3, 2, 2,
	2, 920, 921, 7, 44, 2, 2, 921, 922, 7, 44, 2, 2, 922, 328, 3, 2, 2, 2,
	923, 924, 7, 8728, 2, 2, 924, 330, 3, 2, 2, 2, 925, 926, 7, 8902, 2, 2,
	926, 332, 3, 2, 2, 2, 927, 928, 7, 8898, 2, 2, 928, 334, 3, 2, 2, 2, 929,
	930, 7, 8899, 2, 2, 930, 336, 3, 2, 2, 2, 931, 932, 7, 8857, 2, 2, 932,
	338, 3, 2, 2, 2, 933, 934, 7, 185, 2, 2, 934, 340, 3, 2, 2, 2, 935, 936,
	7, 8904, 2, 2, 936, 342, 3, 2, 2, 2, 937, 938, 7, 8770, 2, 2, 938, 344,
	3, 2, 2, 2, 939, 940, 7, 8722, 2, 2, 940, 346, 3, 2, 2, 2, 941, 942, 7,
	8996, 2, 2, 942, 348, 3, 2, 2, 2, 943, 944, 7, 8997, 2, 2, 944, 350, 3,
	2, 2, 2, 945, 946, 7, 8855, 2, 2, 946, 352, 3, 2, 2, 2, 947, 948, 7, 8856,
	2, 2, 948, 354, 3, 2, 2, 2, 949, 950, 7, 8760, 2, 2, 950, 356, 3, 2, 2,
	2, 951, 952, 7, 49, 2, 2, 952, 953, 7, 49, 2, 2, 953, 358, 3, 2, 2, 2,
	954, 955, 7, 62516, 2, 2, 955, 360, 3, 2, 2, 2, 956, 957, 7, 45, 2, 2,
	957, 958, 8, 181, 22, 2, 958, 362, 3, 2, 2, 2, 959, 960, 7, 47, 2, 2, 960,
	961, 8, 182, 23, 2, 961, 364, 3, 2, 2, 2, 962, 963, 7, 179, 2, 2, 963,
	964, 8, 183, 24, 2, 964, 366, 3, 2, 2, 2, 965, 966, 7, 8725, 2, 2, 966,
	967, 8, 184, 25, 2, 967, 368, 3, 2, 2, 2, 968, 969, 7, 94, 2, 2, 969, 970,
	7, 98, 2, 2, 970, 370, 3, 2, 2, 2, 971, 972, 7, 94, 2, 2, 972, 973, 7,
	35, 2, 2, 973, 372, 3, 2, 2, 2, 974, 975, 7, 94, 2, 2, 975, 976, 7, 49,
	2, 2, 976, 374, 3, 2, 2, 2, 977, 978, 7, 94, 2, 2, 978, 979, 7, 42, 2,
	2, 979, 376, 3, 2, 2, 2, 980, 981, 7, 94, 2, 2, 981, 982, 7, 39, 2, 2,
	982, 378, 3, 2, 2, 2, 983, 984, 7, 94, 2, 2, 984, 985, 7, 40, 2, 2, 985,
	380, 3, 2, 2, 2, 986, 987, 7, 94, 2, 2, 987, 988, 7, 43, 2, 2, 988, 382,
	3, 2, 2, 2, 989, 990, 7, 94, 2, 2, 990, 991, 7, 66, 2, 2, 991, 384, 3,
	2, 2, 2, 992, 993, 7, 94, 2, 2, 993, 994, 7, 97, 2, 2, 994, 386, 3, 2,
	2, 2, 995, 996, 7, 94, 2, 2, 996, 997, 7, 96, 2, 2, 997, 388, 3, 2, 2,
	2, 998, 999, 7, 94, 2, 2, 999, 1000, 7, 45, 2, 2, 1000, 390, 3, 2, 2, 2,
	1001, 1002, 7, 94, 2, 2, 1002, 1003, 7, 44, 2, 2, 1003, 392, 3, 2, 2, 2,
	1004, 1005, 7, 49, 2, 2, 1005, 394, 3, 2, 2, 2, 1006, 1007, 7, 249, 2,
	2, 1007, 396, 3, 2, 2, 2, 1008, 1011, 5, 399, 200, 2, 1009, 1011, 5, 401,
	201, 2, 1010, 1008, 3, 2, 2, 2, 1010, 1009, 3, 2, 2, 2, 1011, 398, 3, 2,
	2, 2, 1012, 1013, 7, 44, 2, 2, 1013, 400, 3, 2, 2, 2, 1014, 1015, 7, 217,
	2, 2, 1015, 402, 3, 2, 2, 2, 1016, 1017, 7, 12, 2, 2, 1017, 1018, 8, 202,
	26, 2, 1018, 404, 3, 2, 2, 2, 1019, 1020, 7, 62387, 2, 2, 1020, 1021, 3,
	2, 2, 2, 1021, 1022, 8, 203, 2, 2, 1022, 406, 3, 2, 2, 2, 1023, 1026, 9,
	9, 2, 2, 1024, 1026, 5, 409, 205, 2, 1025, 1023, 3, 2, 2, 2, 1025, 1024,
	3, 2, 2, 2, 1026, 1027, 3, 2, 2, 2, 1027, 1025, 3, 2, 2, 2, 1027, 1028,
	3, 2, 2, 2, 1028, 1029, 3, 2, 2, 2, 1029, 1030, 8, 204, 2, 2, 1030, 408,
	3, 2, 2, 2, 1031, 1033, 9, 10, 2, 2, 1032, 1031, 3, 2, 2, 2, 1033, 410,
	3, 2, 2, 2, 33, 2, 414, 419, 424, 428, 439, 445, 451, 457, 460, 465, 471,
	475, 480, 482, 487, 493, 497, 504, 508, 514, 529, 632, 643, 653, 665, 762,
	1010, 1025, 1027, 1032, 27, 8, 2, 2, 3, 19, 2, 3, 20, 3, 3, 21, 4, 3, 22,
	5, 3, 23, 6, 3, 24, 7, 3, 28, 8, 3, 29, 9, 3, 30, 10, 3, 31, 11, 3, 32,
	12, 3, 33, 13, 3, 36, 14, 3, 37, 15, 3, 38, 16, 3, 39, 17, 3, 40, 18, 3,
	41, 19, 3, 153, 20, 3, 181, 21, 3, 182, 22, 3, 183, 23, 3, 184, 24, 3,
	202, 25,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "", "", "'('", "')'", "'{'", "'}'", "'['", "']'", "','",
	"'(*'", "'*)'", "'\u2329'", "'\u232A'", "'\u230A'", "'\u230B'", "'\u2308'",
	"'\u2309'", "'||'", "'|'", "'\u301A'", "'\u301B'", "'\uF603'", "'\uF604'",
	"'\uF605'", "'\uF606'", "'``'", "'`'", "'''", "'\"'", "'<<'", "'>>>'",
	"'>>'", "'==='", "'=!='", "", "'='", "", "", "", "'<'", "'>'", "'\uF3D0'",
	"'\uF3D1'", "'\u2225'", "'\u2226'", "'\u2208'", "'\u2209'", "'\u2282'",
	"'\u2283'", "'\u00AC'", "'&&'", "'\u2227'", "'\u22BC'", "'\u22BB'", "'\uF4A2'",
	"'\u2228'", "'\u22BD'", "'\u29E6'", "'\uF523'", "'\u2970'", "'\u22A2'",
	"'\u22A8'", "'\u22A3'", "'\u2AE4'", "'\u22A5'", "'\u22A4'", "'\u220D'",
	"'\u2234'", "'\u2235'", "'...'", "'..'", "'?'", "'___'", "'__'", "'_.'",
	"'_'", "", "", "'::'", "':'", "'~~'", "'/;'", "'->'", "'\uF522'", "':>'",
	"'\uF51F'", "'/.'", "'//.'", "", "", "", "'##'", "'#'", "'+='", "'-='",
	"'*='", "'/='", "'&'", "'^:='", "':='", "'^='", "'/:'", "'\uF4A1'", "'.'",
	"'^^'", "'^'", "'*^'", "'++'", "'--'", "'@@@'", "'@@'", "'@*'", "'@'",
	"'/@'", "'/*'", "'//@'", "'!!'", "'!'", "'<>'", "'\u222B'", "'\uF74C'",
	"'\uF4A0'", "'\\'", "'\u22C2'", "'\u22C3'", "';;'", "';'", "'\uF3C7'",
	"'\uF3C9'", "'\uF3CE'", "'\uF3C8'", "'~'", "'\u2207'", "'\uF520'", "'\u2218'",
	"'\u2299'", "'**'", "'\u2216'", "'\u22C4'", "'\u22C0'", "'\u22C1'", "'\u2297'",
	"'\u00B7'", "'\u22C6'", "'\u2240'", "'\u2210'", "'\u2322'", "'\u2323'",
	"'\u2295'", "'\u2296'", "'\u2236'", "'//'", "'\uF432'", "'+'", "'-'", "'\u00B1'",
	"'\u2213'", "'\\`'", "'\\!'", "'\\/'", "'\\('", "'\\%'", "'\\&'", "'\\)'",
	"'\\@'", "'\\_'", "'\\^'", "'\\+'", "'\\*'", "'/'", "'\u00F7'", "", "'*'",
	"'\u00D7'", "'\n'", "'\uF3B1'",
}

var lexerSymbolicNames = []string{
	"", "Name", "DecimalNumber", "NumberInBase", "DIGITS", "StringLiteral",
	"COMMENT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET",
	"COMMA", "LCOMMENT", "RCOMMENT", "LANGLE", "RANGLE", "LFLOOR", "RFLOOR",
	"LCEILING", "RCEILING", "DOUBLEBAR", "BAR", "LBARBRACKET", "RBARBRACKET",
	"LBRACKETINGBAR", "RBRACKETINGBAR", "LDOUBLEBRACKETINGBAR", "RDOUBLEBRACKETINGBAR",
	"DOUBLEBACKQUOTE", "BACKQUOTE", "SINGLEQUOTE", "QUOTE", "DOUBLELESS", "TRIPPLEGREATER",
	"DOUBLEGREATER", "TRIPPLEEQUAL", "EQUALBANGEQUAL", "EqualSymbol", "EQUAL",
	"NotEqualSymbol", "GreaterEqualSymbol", "LessEqualSymbol", "LESS", "GREATER",
	"VERTICALBAR", "NOTVERTICALBAR", "DOUBLEVERTICALBAR", "NOTDOUBLEVERTICALBAR",
	"ELEMENT", "NOTELEMENT", "SUBSET", "SUPERSET", "NOT", "DOUBLEAMP", "AND",
	"NAND", "XOR", "XNOR", "OR", "NOR", "LRDOUBLEARROW", "RDOUBLEARROW", "LCONTAINS",
	"RIGHTTEE", "DOUBLERIGHTTEE", "LEFTTEE", "DOUBLELEFTTEE", "UPTEE", "DOWNTEE",
	"SUCHTHAT", "THEREFORE", "BECAUSE", "TRIPPLEDOT", "DOUBLEDOT", "QUESTIONMARK",
	"TRIPPLEBLANK", "DOUBLEBLANK", "BLANKDOT", "BLANK", "PERCENTDIGITS", "PERCENTS",
	"DOUBLECOLON", "RAWCOLON", "DOUBLETILDE", "SLASHSEMI", "MINUSGREATER",
	"RARROW", "COLONGREATER", "COLONARROW", "SLASHDOT", "DOUBLESLASHDOT", "HASHDIGITS",
	"HASHStringLiteral", "DOUBLEHASHDIGITS", "DOUBLEHASH", "HASH", "PLUSEQUAL",
	"MINUSEQUAL", "ASTERISKEQUAL", "SLASHEQUAL", "AMP", "CARETCOLONEQUAL",
	"COLONEQUAL", "CARETEQUAL", "SLASHCOLON", "FUNCTIONARROW", "DOT", "DOUBLECARET",
	"CARET", "ASTERISKCARET", "DOUBLEPLUS", "DOUBLEMINUS", "TRIPPLEAT", "DOUBLEAT",
	"ATASTERISK", "AT", "MAP", "SLASHASTERISK", "MAPALL", "DOUBLEBANG", "BANG",
	"LESSGREATER", "INTEGRAL", "DIFFERENTIALD", "CROSS", "RAWBACKSLASH", "INTERSECTION",
	"UNION", "DOUBLESEMICOLON", "SEMICOLON", "TRANSPOSE", "CONJUGATETRANSPOSE",
	"HERMITIANCONJUGATE", "CONJUGATE", "TILDE", "DEL", "SQUARE", "SMALLCIRCLE",
	"CIRCLEDOT", "DOUBLEASTERISK", "BACKSLASH", "DIAMOND", "WEDGE", "VEE",
	"CIRCLETIMES", "CENTERDOT", "STAR", "VERTICALTILDE", "COPRODUCT", "CAP",
	"CUP", "CIRCLEPLUS", "CIRCLEMINUS", "COLON", "DOUBLESLASH", "VERTICALSEPARATOR",
	"PLUS", "MINUS", "PLUSMINUS", "MINUSPLUS", "FormBox", "InterpretedBox",
	"BoxFraction", "BoxLeftBoxParenthesis", "BoxOtherscript", "BoxOverscript",
	"BoxRightBoxParenthesis", "BoxSqrt", "BoxSubscript", "BoxSuperscript",
	"BoxUnderscript", "BoxConstructor", "SLASH", "DIVIDE", "MultiplicationSymbol",
	"ASTERISK", "TIMES", "NEWLINE", "CONTINUATION", "WHITESPACE",
}

var lexerRuleNames = []string{
	"Name", "LetterFormOrDigit", "LetterForm", "Letter", "Letterlike", "DecimalNumber",
	"NumberInBase", "DIGITS", "DIGIT", "DigitInAnyBase", "StringLiteral", "StringCharacters",
	"StringCharacter", "EscapeSequence", "UnicodeEscape", "HexDigit", "COMMENT",
	"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "COMMA",
	"LCOMMENT", "RCOMMENT", "LANGLE", "RANGLE", "LFLOOR", "RFLOOR", "LCEILING",
	"RCEILING", "DOUBLEBAR", "BAR", "LBARBRACKET", "RBARBRACKET", "LBRACKETINGBAR",
	"RBRACKETINGBAR", "LDOUBLEBRACKETINGBAR", "RDOUBLEBRACKETINGBAR", "DOUBLEBACKQUOTE",
	"BACKQUOTE", "SINGLEQUOTE", "QUOTE", "DOUBLELESS", "TRIPPLEGREATER", "DOUBLEGREATER",
	"TRIPPLEEQUAL", "EQUALBANGEQUAL", "EqualSymbol", "LONGEQUAL", "DOUBLEEQUAL",
	"EQUAL", "NotEqualSymbol", "BANGEQUAL", "NOTEQUAL", "GreaterEqualSymbol",
	"RAWGREATEREQUAL", "GREATEREQUAL", "GREATERSLANTEQUAL", "LessEqualSymbol",
	"RAWLESSEQUAL", "LESSEQUAL", "LESSSLANTEQUAL", "LESS", "GREATER", "VERTICALBAR",
	"NOTVERTICALBAR", "DOUBLEVERTICALBAR", "NOTDOUBLEVERTICALBAR", "ELEMENT",
	"NOTELEMENT", "SUBSET", "SUPERSET", "NOT", "DOUBLEAMP", "AND", "NAND",
	"XOR", "XNOR", "OR", "NOR", "LRDOUBLEARROW", "RDOUBLEARROW", "LCONTAINS",
	"RIGHTTEE", "DOUBLERIGHTTEE", "LEFTTEE", "DOUBLELEFTTEE", "UPTEE", "DOWNTEE",
	"SUCHTHAT", "THEREFORE", "BECAUSE", "TRIPPLEDOT", "DOUBLEDOT", "QUESTIONMARK",
	"TRIPPLEBLANK", "DOUBLEBLANK", "BLANKDOT", "BLANK", "PERCENTDIGITS", "PERCENTS",
	"PERCENT", "DOUBLECOLON", "RAWCOLON", "DOUBLETILDE", "SLASHSEMI", "MINUSGREATER",
	"RARROW", "COLONGREATER", "COLONARROW", "SLASHDOT", "DOUBLESLASHDOT", "HASHDIGITS",
	"HASHStringLiteral", "DOUBLEHASHDIGITS", "DOUBLEHASH", "HASH", "PLUSEQUAL",
	"MINUSEQUAL", "ASTERISKEQUAL", "SLASHEQUAL", "AMP", "CARETCOLONEQUAL",
	"COLONEQUAL", "CARETEQUAL", "SLASHCOLON", "FUNCTIONARROW", "DOT", "DOUBLECARET",
	"CARET", "ASTERISKCARET", "DOUBLEPLUS", "DOUBLEMINUS", "TRIPPLEAT", "DOUBLEAT",
	"ATASTERISK", "AT", "MAP", "SLASHASTERISK", "MAPALL", "DOUBLEBANG", "BANG",
	"LESSGREATER", "INTEGRAL", "DIFFERENTIALD", "CROSS", "RAWBACKSLASH", "INTERSECTION",
	"UNION", "DOUBLESEMICOLON", "SEMICOLON", "TRANSPOSE", "CONJUGATETRANSPOSE",
	"HERMITIANCONJUGATE", "CONJUGATE", "TILDE", "DEL", "SQUARE", "SMALLCIRCLE",
	"CIRCLEDOT", "DOUBLEASTERISK", "BACKSLASH", "DIAMOND", "WEDGE", "VEE",
	"CIRCLETIMES", "CENTERDOT", "STAR", "VERTICALTILDE", "COPRODUCT", "CAP",
	"CUP", "CIRCLEPLUS", "CIRCLEMINUS", "COLON", "DOUBLESLASH", "VERTICALSEPARATOR",
	"PLUS", "MINUS", "PLUSMINUS", "MINUSPLUS", "FormBox", "InterpretedBox",
	"BoxFraction", "BoxLeftBoxParenthesis", "BoxOtherscript", "BoxOverscript",
	"BoxRightBoxParenthesis", "BoxSqrt", "BoxSubscript", "BoxSuperscript",
	"BoxUnderscript", "BoxConstructor", "SLASH", "DIVIDE", "MultiplicationSymbol",
	"ASTERISK", "TIMES", "NEWLINE", "CONTINUATION", "WHITESPACE", "SpaceCharacter",
}

type FoxySheepLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewFoxySheepLexer(input antlr.CharStream) *FoxySheepLexer {

	l := new(FoxySheepLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FoxySheep.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FoxySheepLexer tokens.
const (
	FoxySheepLexerName                   = 1
	FoxySheepLexerDecimalNumber          = 2
	FoxySheepLexerNumberInBase           = 3
	FoxySheepLexerDIGITS                 = 4
	FoxySheepLexerStringLiteral          = 5
	FoxySheepLexerCOMMENT                = 6
	FoxySheepLexerLPAREN                 = 7
	FoxySheepLexerRPAREN                 = 8
	FoxySheepLexerLBRACE                 = 9
	FoxySheepLexerRBRACE                 = 10
	FoxySheepLexerLBRACKET               = 11
	FoxySheepLexerRBRACKET               = 12
	FoxySheepLexerCOMMA                  = 13
	FoxySheepLexerLCOMMENT               = 14
	FoxySheepLexerRCOMMENT               = 15
	FoxySheepLexerLANGLE                 = 16
	FoxySheepLexerRANGLE                 = 17
	FoxySheepLexerLFLOOR                 = 18
	FoxySheepLexerRFLOOR                 = 19
	FoxySheepLexerLCEILING               = 20
	FoxySheepLexerRCEILING               = 21
	FoxySheepLexerDOUBLEBAR              = 22
	FoxySheepLexerBAR                    = 23
	FoxySheepLexerLBARBRACKET            = 24
	FoxySheepLexerRBARBRACKET            = 25
	FoxySheepLexerLBRACKETINGBAR         = 26
	FoxySheepLexerRBRACKETINGBAR         = 27
	FoxySheepLexerLDOUBLEBRACKETINGBAR   = 28
	FoxySheepLexerRDOUBLEBRACKETINGBAR   = 29
	FoxySheepLexerDOUBLEBACKQUOTE        = 30
	FoxySheepLexerBACKQUOTE              = 31
	FoxySheepLexerSINGLEQUOTE            = 32
	FoxySheepLexerQUOTE                  = 33
	FoxySheepLexerDOUBLELESS             = 34
	FoxySheepLexerTRIPPLEGREATER         = 35
	FoxySheepLexerDOUBLEGREATER          = 36
	FoxySheepLexerTRIPPLEEQUAL           = 37
	FoxySheepLexerEQUALBANGEQUAL         = 38
	FoxySheepLexerEqualSymbol            = 39
	FoxySheepLexerEQUAL                  = 40
	FoxySheepLexerNotEqualSymbol         = 41
	FoxySheepLexerGreaterEqualSymbol     = 42
	FoxySheepLexerLessEqualSymbol        = 43
	FoxySheepLexerLESS                   = 44
	FoxySheepLexerGREATER                = 45
	FoxySheepLexerVERTICALBAR            = 46
	FoxySheepLexerNOTVERTICALBAR         = 47
	FoxySheepLexerDOUBLEVERTICALBAR      = 48
	FoxySheepLexerNOTDOUBLEVERTICALBAR   = 49
	FoxySheepLexerELEMENT                = 50
	FoxySheepLexerNOTELEMENT             = 51
	FoxySheepLexerSUBSET                 = 52
	FoxySheepLexerSUPERSET               = 53
	FoxySheepLexerNOT                    = 54
	FoxySheepLexerDOUBLEAMP              = 55
	FoxySheepLexerAND                    = 56
	FoxySheepLexerNAND                   = 57
	FoxySheepLexerXOR                    = 58
	FoxySheepLexerXNOR                   = 59
	FoxySheepLexerOR                     = 60
	FoxySheepLexerNOR                    = 61
	FoxySheepLexerLRDOUBLEARROW          = 62
	FoxySheepLexerRDOUBLEARROW           = 63
	FoxySheepLexerLCONTAINS              = 64
	FoxySheepLexerRIGHTTEE               = 65
	FoxySheepLexerDOUBLERIGHTTEE         = 66
	FoxySheepLexerLEFTTEE                = 67
	FoxySheepLexerDOUBLELEFTTEE          = 68
	FoxySheepLexerUPTEE                  = 69
	FoxySheepLexerDOWNTEE                = 70
	FoxySheepLexerSUCHTHAT               = 71
	FoxySheepLexerTHEREFORE              = 72
	FoxySheepLexerBECAUSE                = 73
	FoxySheepLexerTRIPPLEDOT             = 74
	FoxySheepLexerDOUBLEDOT              = 75
	FoxySheepLexerQUESTIONMARK           = 76
	FoxySheepLexerTRIPPLEBLANK           = 77
	FoxySheepLexerDOUBLEBLANK            = 78
	FoxySheepLexerBLANKDOT               = 79
	FoxySheepLexerBLANK                  = 80
	FoxySheepLexerPERCENTDIGITS          = 81
	FoxySheepLexerPERCENTS               = 82
	FoxySheepLexerDOUBLECOLON            = 83
	FoxySheepLexerRAWCOLON               = 84
	FoxySheepLexerDOUBLETILDE            = 85
	FoxySheepLexerSLASHSEMI              = 86
	FoxySheepLexerMINUSGREATER           = 87
	FoxySheepLexerRARROW                 = 88
	FoxySheepLexerCOLONGREATER           = 89
	FoxySheepLexerCOLONARROW             = 90
	FoxySheepLexerSLASHDOT               = 91
	FoxySheepLexerDOUBLESLASHDOT         = 92
	FoxySheepLexerHASHDIGITS             = 93
	FoxySheepLexerHASHStringLiteral      = 94
	FoxySheepLexerDOUBLEHASHDIGITS       = 95
	FoxySheepLexerDOUBLEHASH             = 96
	FoxySheepLexerHASH                   = 97
	FoxySheepLexerPLUSEQUAL              = 98
	FoxySheepLexerMINUSEQUAL             = 99
	FoxySheepLexerASTERISKEQUAL          = 100
	FoxySheepLexerSLASHEQUAL             = 101
	FoxySheepLexerAMP                    = 102
	FoxySheepLexerCARETCOLONEQUAL        = 103
	FoxySheepLexerCOLONEQUAL             = 104
	FoxySheepLexerCARETEQUAL             = 105
	FoxySheepLexerSLASHCOLON             = 106
	FoxySheepLexerFUNCTIONARROW          = 107
	FoxySheepLexerDOT                    = 108
	FoxySheepLexerDOUBLECARET            = 109
	FoxySheepLexerCARET                  = 110
	FoxySheepLexerASTERISKCARET          = 111
	FoxySheepLexerDOUBLEPLUS             = 112
	FoxySheepLexerDOUBLEMINUS            = 113
	FoxySheepLexerTRIPPLEAT              = 114
	FoxySheepLexerDOUBLEAT               = 115
	FoxySheepLexerATASTERISK             = 116
	FoxySheepLexerAT                     = 117
	FoxySheepLexerMAP                    = 118
	FoxySheepLexerSLASHASTERISK          = 119
	FoxySheepLexerMAPALL                 = 120
	FoxySheepLexerDOUBLEBANG             = 121
	FoxySheepLexerBANG                   = 122
	FoxySheepLexerLESSGREATER            = 123
	FoxySheepLexerINTEGRAL               = 124
	FoxySheepLexerDIFFERENTIALD          = 125
	FoxySheepLexerCROSS                  = 126
	FoxySheepLexerRAWBACKSLASH           = 127
	FoxySheepLexerINTERSECTION           = 128
	FoxySheepLexerUNION                  = 129
	FoxySheepLexerDOUBLESEMICOLON        = 130
	FoxySheepLexerSEMICOLON              = 131
	FoxySheepLexerTRANSPOSE              = 132
	FoxySheepLexerCONJUGATETRANSPOSE     = 133
	FoxySheepLexerHERMITIANCONJUGATE     = 134
	FoxySheepLexerCONJUGATE              = 135
	FoxySheepLexerTILDE                  = 136
	FoxySheepLexerDEL                    = 137
	FoxySheepLexerSQUARE                 = 138
	FoxySheepLexerSMALLCIRCLE            = 139
	FoxySheepLexerCIRCLEDOT              = 140
	FoxySheepLexerDOUBLEASTERISK         = 141
	FoxySheepLexerBACKSLASH              = 142
	FoxySheepLexerDIAMOND                = 143
	FoxySheepLexerWEDGE                  = 144
	FoxySheepLexerVEE                    = 145
	FoxySheepLexerCIRCLETIMES            = 146
	FoxySheepLexerCENTERDOT              = 147
	FoxySheepLexerSTAR                   = 148
	FoxySheepLexerVERTICALTILDE          = 149
	FoxySheepLexerCOPRODUCT              = 150
	FoxySheepLexerCAP                    = 151
	FoxySheepLexerCUP                    = 152
	FoxySheepLexerCIRCLEPLUS             = 153
	FoxySheepLexerCIRCLEMINUS            = 154
	FoxySheepLexerCOLON                  = 155
	FoxySheepLexerDOUBLESLASH            = 156
	FoxySheepLexerVERTICALSEPARATOR      = 157
	FoxySheepLexerPLUS                   = 158
	FoxySheepLexerMINUS                  = 159
	FoxySheepLexerPLUSMINUS              = 160
	FoxySheepLexerMINUSPLUS              = 161
	FoxySheepLexerFormBox                = 162
	FoxySheepLexerInterpretedBox         = 163
	FoxySheepLexerBoxFraction            = 164
	FoxySheepLexerBoxLeftBoxParenthesis  = 165
	FoxySheepLexerBoxOtherscript         = 166
	FoxySheepLexerBoxOverscript          = 167
	FoxySheepLexerBoxRightBoxParenthesis = 168
	FoxySheepLexerBoxSqrt                = 169
	FoxySheepLexerBoxSubscript           = 170
	FoxySheepLexerBoxSuperscript         = 171
	FoxySheepLexerBoxUnderscript         = 172
	FoxySheepLexerBoxConstructor         = 173
	FoxySheepLexerSLASH                  = 174
	FoxySheepLexerDIVIDE                 = 175
	FoxySheepLexerMultiplicationSymbol   = 176
	FoxySheepLexerASTERISK               = 177
	FoxySheepLexerTIMES                  = 178
	FoxySheepLexerNEWLINE                = 179
	FoxySheepLexerCONTINUATION           = 180
	FoxySheepLexerWHITESPACE             = 181
)

func (l *FoxySheepLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 17:
		l.LPAREN_Action(localctx, actionIndex)

	case 18:
		l.RPAREN_Action(localctx, actionIndex)

	case 19:
		l.LBRACE_Action(localctx, actionIndex)

	case 20:
		l.RBRACE_Action(localctx, actionIndex)

	case 21:
		l.LBRACKET_Action(localctx, actionIndex)

	case 22:
		l.RBRACKET_Action(localctx, actionIndex)

	case 26:
		l.LANGLE_Action(localctx, actionIndex)

	case 27:
		l.RANGLE_Action(localctx, actionIndex)

	case 28:
		l.LFLOOR_Action(localctx, actionIndex)

	case 29:
		l.RFLOOR_Action(localctx, actionIndex)

	case 30:
		l.LCEILING_Action(localctx, actionIndex)

	case 31:
		l.RCEILING_Action(localctx, actionIndex)

	case 34:
		l.LBARBRACKET_Action(localctx, actionIndex)

	case 35:
		l.RBARBRACKET_Action(localctx, actionIndex)

	case 36:
		l.LBRACKETINGBAR_Action(localctx, actionIndex)

	case 37:
		l.RBRACKETINGBAR_Action(localctx, actionIndex)

	case 38:
		l.LDOUBLEBRACKETINGBAR_Action(localctx, actionIndex)

	case 39:
		l.RDOUBLEBRACKETINGBAR_Action(localctx, actionIndex)

	case 151:
		l.DOUBLESEMICOLON_Action(localctx, actionIndex)

	case 179:
		l.PLUS_Action(localctx, actionIndex)

	case 180:
		l.MINUS_Action(localctx, actionIndex)

	case 181:
		l.PLUSMINUS_Action(localctx, actionIndex)

	case 182:
		l.MINUSPLUS_Action(localctx, actionIndex)

	case 200:
		l.NEWLINE_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *FoxySheepLexer) LPAREN_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 0:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RPAREN_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 1:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LBRACE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 2:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RBRACE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 3:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LBRACKET_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 4:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RBRACKET_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 5:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LANGLE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 6:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RANGLE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 7:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LFLOOR_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 8:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RFLOOR_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 9:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LCEILING_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 10:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RCEILING_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 11:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LBARBRACKET_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 12:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RBARBRACKET_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 13:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LBRACKETINGBAR_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 14:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RBRACKETINGBAR_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 15:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) LDOUBLEBRACKETINGBAR_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 16:
		l.incrementBracketLevel(1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) RDOUBLEBRACKETINGBAR_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 17:
		l.incrementBracketLevel(-1)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) DOUBLESEMICOLON_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 18:
		l.checkDoubleSemicolon()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) PLUS_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 19:
		l.checkAdditiveOp(FoxySheepParser.BINARYPLUS)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) MINUS_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 20:
		l.checkAdditiveOp(FoxySheepParser.BINARYMINUS)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) PLUSMINUS_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 21:
		l.checkAdditiveOp(FoxySheepParser.BINARYPLUSMINUS)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) MINUSPLUS_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 22:
		l.checkAdditiveOp(FoxySheepParser.BINARYMINUSPLUS)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *FoxySheepLexer) NEWLINE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 23:
		l.checkNewline()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
